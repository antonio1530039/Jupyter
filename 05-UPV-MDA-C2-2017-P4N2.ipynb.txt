{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[  0.   0.   5.  13.   9.   1.   0.   0.]\n",
      " [  0.   0.  13.  15.  10.  15.   5.   0.]\n",
      " [  0.   3.  15.   2.   0.  11.   8.   0.]\n",
      " [  0.   4.  12.   0.   0.   8.   8.   0.]\n",
      " [  0.   5.   8.   0.   0.   9.   8.   0.]\n",
      " [  0.   4.  11.   0.   1.  12.   7.   0.]\n",
      " [  0.   2.  14.   5.  10.  12.   0.   0.]\n",
      " [  0.   0.   6.  13.  10.   0.   0.   0.]]\n"
     ]
    }
   ],
   "source": [
    "# Import `datasets` from `sklearn`\n",
    "from sklearn import datasets\n",
    "\n",
    "# let's load the dataset from scikit-learn once again  \n",
    "digits = datasets.load_digits()\n",
    "\n",
    "# print the first image\n",
    "print digits.images[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAPsAAAD7CAYAAACscuKmAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAABH9JREFUeJzt3c1xVlcWhtF9XU5ABQmIMSMgBZEBxEIIFBlABiqlgjLg\nJwMgAq4H3YPudlua2OfIftYa6ivVewd66kqa7OM8zwH++X7Z/QDAGmKHCLFDhNghQuwQ8etdHx7H\n4V/18Dd0nufxv1+7M/Z/f9Nf8zQPbHNm5ubmZvnmmzdvlm/OzFxdXW3Zffv27fLNi4uL5Zs7Hcfv\nOp8Zv8ZDhtghQuwQIXaIEDtEiB0ixA4RYocIsUOE2CFC7BAhdogQO0SIHSLEDhFihwixQ4TYIULs\nECF2iBA7RIgdIsQOEWKHCLFDhNghQuwQIXaIuPewY8mOI4tfv35dvjkz8+3bty27jx49Wr55fX29\nfHNm5tWrV1t2/4g3O0SIHSLEDhFihwixQ4TYIULsECF2iBA7RIgdIsQOEWKHCLFDhNghQuwQIXaI\nEDtEiB0ixA4RYocIsUOE2CFC7BAhdogQO0SIHSLEDhFihwixQ8S9V1zP81zxHP/l9vZ2+ebMnouq\nnz59Wr45M3N5ebll9+XLl8s3d/08ueIKbCF2iBA7RIgdIsQOEWKHCLFDhNghQuwQIXaIEDtEiB0i\nxA4RYocIsUOE2CFC7BAhdogQO0SIHSLEDhFihwixQ4TYIULsECF2iBA7RIgdIu497LjD9+/ft+w+\ne/Zs+eaTJ0+Wb+70/Pnz3Y+Q5c0OEWKHCLFDhNghQuwQIXaIEDtEiB0ixA4RYocIsUOE2CFC7BAh\ndogQO0SIHSLEDhFihwixQ4TYIULsECF2iBA7RIgdIsQOEWKHCLFDhNghQuwQ4Yrrf7i6ulq+eRzH\n8s2ZmfM8t+z++PFj+ebFxcXyzYfImx0ixA4RYocIsUOE2CFC7BAhdogQO0SIHSLEDhFihwixQ4TY\nIULsECF2iBA7RIgdIsQOEWKHCLFDhNghQuwQIXaIEDtEiB0ixA4RYocIsUOE2CHiQV5x3XV18/b2\ndvnmrmuquy7lfvz4cfnm69evl28+RN7sECF2iBA7RIgdIsQOEWKHCLFDhNghQuwQIXaIEDtEiB0i\nxA4RYocIsUOE2CFC7BAhdogQO0SIHSLEDhFihwixQ4TYIULsECF2iBA7RIgdIo67Dgsex3H+/Plz\n4eP8y5cvX5Zvzsy8ePFi+eaHDx+Wb87M3NzcbNn9/Pnz8s0dxyRnZo7j2LZ7nufvxr3ZIULsECF2\niBA7RIgdIsQOEWKHCLFDhNghQuwQIXaIEDtEiB0ixA4RYocIsUOE2CFC7BAhdogQO0SIHSLEDhFi\nhwixQ4TYIULsECF2iBA7RIgdIu694nrX53+VHZszM+/fv1+++e7du+WbM3su1s7MXF9fL9/cdU11\nF1dcIU7sECF2iBA7RIgdIsQOEWKHCLFDhNghQuwQIXaIEDtEiB0ixA4RYocIsUOE2CFC7BAhdogQ\nO0SIHSLEDhFihwixQ4TYIULsECF2iBA7RPy6+wEeksePHy/ffPr06fLNmZnLy8stu+xz7xXXhc8C\n/En+3xXXO2MH/jn8zQ4RYocIsUOE2CFC7BDxG5+NfBNvvbDGAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f0c20276890>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "\n",
    "# import matplotlib\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# figure size (width, height) in inches \n",
    "fig = plt.figure(figsize=(40, 40))\n",
    "\n",
    "ax = fig.add_subplot(8, 8, 1, xticks=[], yticks=[])\n",
    "\n",
    "# display an image at the 0 position\n",
    "ax.imshow(digits.images[0], cmap=plt.cm.binary, interpolation='none')\n",
    "\n",
    "# show the plot\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f0c1e21b510>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# figure size (width, height) in inches\n",
    "fig = plt.figure(figsize=(6, 6))\n",
    "\n",
    "# adjust the subplots \n",
    "fig.subplots_adjust(left=0, right=1, bottom=0, top=1, hspace=0.05, wspace=0.05)\n",
    "\n",
    "# for each of the 64 images\n",
    "for i in range(64):\n",
    "    # initialize the subplots: add a subplot in the grid of 8 by 8, at the i+1-th position\n",
    "    ax = fig.add_subplot(8, 8, i + 1, xticks=[], yticks=[])\n",
    "    # display an image at the i-th position\n",
    "    ax.imshow(digits.images[i], cmap=plt.cm.binary, interpolation='none')\n",
    "    # label the igits.target[i]image with the target value\n",
    "    ax.text(0, 7, str(digits.target[i]))\n",
    "\n",
    "# show the plot\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[(array([[  0.,   0.,   5.,  13.,   9.,   1.,   0.,   0.],\n",
      "       [  0.,   0.,  13.,  15.,  10.,  15.,   5.,   0.],\n",
      "       [  0.,   3.,  15.,   2.,   0.,  11.,   8.,   0.],\n",
      "       [  0.,   4.,  12.,   0.,   0.,   8.,   8.,   0.],\n",
      "       [  0.,   5.,   8.,   0.,   0.,   9.,   8.,   0.],\n",
      "       [  0.,   4.,  11.,   0.,   1.,  12.,   7.,   0.],\n",
      "       [  0.,   2.,  14.,   5.,  10.,  12.,   0.,   0.],\n",
      "       [  0.,   0.,   6.,  13.,  10.,   0.,   0.,   0.]]), 0), (array([[  0.,   0.,   0.,  12.,  13.,   5.,   0.,   0.],\n",
      "       [  0.,   0.,   0.,  11.,  16.,   9.,   0.,   0.],\n",
      "       [  0.,   0.,   3.,  15.,  16.,   6.,   0.,   0.],\n",
      "       [  0.,   7.,  15.,  16.,  16.,   2.,   0.,   0.],\n",
      "       [  0.,   0.,   1.,  16.,  16.,   3.,   0.,   0.],\n",
      "       [  0.,   0.,   1.,  16.,  16.,   6.,   0.,   0.],\n",
      "       [  0.,   0.,   1.,  16.,  16.,   6.,   0.,   0.],\n",
      "       [  0.,   0.,   0.,  11.,  16.,  10.,   0.,   0.]]), 1), (array([[  0.,   0.,   0.,   4.,  15.,  12.,   0.,   0.],\n",
      "       [  0.,   0.,   3.,  16.,  15.,  14.,   0.,   0.],\n",
      "       [  0.,   0.,   8.,  13.,   8.,  16.,   0.,   0.],\n",
      "       [  0.,   0.,   1.,   6.,  15.,  11.,   0.,   0.],\n",
      "       [  0.,   1.,   8.,  13.,  15.,   1.,   0.,   0.],\n",
      "       [  0.,   9.,  16.,  16.,   5.,   0.,   0.,   0.],\n",
      "       [  0.,   3.,  13.,  16.,  16.,  11.,   5.,   0.],\n",
      "       [  0.,   0.,   0.,   3.,  11.,  16.,   9.,   0.]]), 2), (array([[  0.,   0.,   7.,  15.,  13.,   1.,   0.,   0.],\n",
      "       [  0.,   8.,  13.,   6.,  15.,   4.,   0.,   0.],\n",
      "       [  0.,   2.,   1.,  13.,  13.,   0.,   0.,   0.],\n",
      "       [  0.,   0.,   2.,  15.,  11.,   1.,   0.,   0.],\n",
      "       [  0.,   0.,   0.,   1.,  12.,  12.,   1.,   0.],\n",
      "       [  0.,   0.,   0.,   0.,   1.,  10.,   8.,   0.],\n",
      "       [  0.,   0.,   8.,   4.,   5.,  14.,   9.,   0.],\n",
      "       [  0.,   0.,   7.,  13.,  13.,   9.,   0.,   0.]]), 3), (array([[  0.,   0.,   0.,   1.,  11.,   0.,   0.,   0.],\n",
      "       [  0.,   0.,   0.,   7.,   8.,   0.,   0.,   0.],\n",
      "       [  0.,   0.,   1.,  13.,   6.,   2.,   2.,   0.],\n",
      "       [  0.,   0.,   7.,  15.,   0.,   9.,   8.,   0.],\n",
      "       [  0.,   5.,  16.,  10.,   0.,  16.,   6.,   0.],\n",
      "       [  0.,   4.,  15.,  16.,  13.,  16.,   1.,   0.],\n",
      "       [  0.,   0.,   0.,   3.,  15.,  10.,   0.,   0.],\n",
      "       [  0.,   0.,   0.,   2.,  16.,   4.,   0.,   0.]]), 4)]\n"
     ]
    }
   ],
   "source": [
    "# Join the images and target labels in a list\n",
    "images_and_labels = list(zip(digits.images, digits.target))\n",
    "\n",
    "print images_and_labels[:5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f0c1e21b090>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# for every element in the list\n",
    "for index, (image, label) in enumerate(images_and_labels[:8]):\n",
    "    # initialize a subplot of 2X4 at the i+1-th position\n",
    "    plt.subplot(2, 4, index + 1)\n",
    "    # Don't plot any axes\n",
    "    plt.axis('off')\n",
    "    # Display images in all subplots \n",
    "    plt.imshow(image, cmap=plt.cm.gray_r,interpolation='none')\n",
    "    # Add a title to each subplot\n",
    "    plt.title('Training: ' + str(label))\n",
    "\n",
    "# Show the plot\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.14"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
